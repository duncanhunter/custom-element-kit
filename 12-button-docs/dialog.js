const t=["open"],e=(e={})=>`\n\t\t<dialog id="dialog" part="dialog" ${t.filter((t=>void 0!==e[t]&&!(e.modal&&e.open))).map((t=>`${t}="${e[t]}"`)).join(" ")} aria-modal="true">\n\t\t\t<header part="header" id="header">\n\t\t\t\t<slot name="header"></slot>\n\t\t\t\t<slot name="header-actions"></slot>\n\t\t\t</header>\n\t\t\t<div id="content" part="content">\n\t\t\t\t<slot></slot>\n\t\t\t</div>\n\t\t\t<footer part="footer">\n\t\t\t\t<slot name="footer"></slot>\n\t\t\t</footer>\n\t\t</dialog>\n\t`,o="\ndialog {\n\tz-index: 1;\n}\n";class s extends HTMLElement{static get observedAttributes(){return["open","modal"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`<style>${o}</style>${e(this.#t)}`}get#e(){return this.shadowRoot.getElementById("dialog")}get#t(){let t="";for(const{name:e,value:o}of this.attributes)t+=` ${e}="${o}"`;return t}connectedCallback(){this.addEventListener("command",this.#o),this.#e.addEventListener("close",this.close),this.#s()}disconnectedCallback(){this.removeEventListener("command",this.#o),this.#e.removeEventListener("close",this.close)}attributeChangedCallback(t,e,o){"open"===t&&(null===o&&this.#e.hasAttribute("open")?this.close():this.#s())}show(){this.#e.show(),this.#i(),this.setAttribute("open",""),this.#e.setAttribute("aria-modal","false")}showModal(){this.#e.showModal(),this.#i(),this.setAttribute("open",""),this.setAttribute("modal",""),this.#e.setAttribute("aria-modal","true")}close=(t="cancel")=>{this.#e.close(t),this.removeAttribute("open"),this.removeAttribute("modal"),this.dispatchEvent(new CustomEvent("close",{bubbles:!0,composed:!0}))};#s(){this.hasAttribute("open")&&!this.#e.hasAttribute("open")&&(this.hasAttribute("modal")?this.showModal():this.show())}#i(){requestAnimationFrame((()=>{const t=this.querySelector("[autofocus]");t?.tagName.toLowerCase().startsWith("cek-")&&t.focus()}))}#o=t=>{const e=t.command.replace(/(-\w)/g,(t=>t[1].toUpperCase()));e in this&&this[e](t)}}customElements.define("cek-dialog",s);export{o as dialogStyles,e as dialogTemplate};
