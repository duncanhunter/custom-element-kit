const t=["type","disabled","button-aria-label","value","href","target","autofocus"],n=(n={})=>{const e=n.href?"a":"button";return`\n\t\t<${e} id="button" part="button" ${t.filter((t=>void 0!==n[t])).map((t=>`${"button-aria-label"===t?"aria-label":t}="${n[t]}"`)).join(" ")}>\n\t\t<slot name="start"></slot>\n\t\t<div id="label" part="label"><slot></slot></div>\n\t\t<slot name="end"></slot>\n\t\t<svg id="loading-icon" part="loading-icon" width="24" height="24" viewBox="0 0 24 24" \n\t\t\txmlns="http://www.w3.org/2000/svg">\n\t\t\t<path d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25"/>\n\t\t\t<path d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7\n\t\t\ta8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z">\n\t\t\t<animateTransform attributeName="transform" type="rotate" dur="0.75s" \n\t\t\t\tvalues="0 12 12;360 12 12" repeatCount="indefinite"/>\n\t\t\t</path>\n\t\t</svg>\n\t\t<svg id="arrow-icon" part="arrow-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" \n\t\t\tfill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">  \n\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />\n\t\t</svg>\n\t\t</${e}>\n\t`},e='\n:host {\n  \tdisplay: inline-block;\n  \tfont-family: var(--cek-font-family);\n  \tbox-sizing: border-box;\n}\n\n#button {\n  \tdisplay: inline-flex;\n  \talign-items: center;\n  \tjustify-content: center;\n  \tposition: relative;\n  \tbackground: transparent;\n  \tborder: none;\n  \tpadding: 0;\n  \tmargin: 0;\n  \tfont: inherit;\n  \tcolor: inherit;\n  \tcursor: pointer;\n  \tbox-sizing: border-box;\n  \ttext-decoration: none;\n}\n\n:host([variant]) #button {\n  \tborder-radius: var(--cek-border-radius);\n  \tpadding-inline: var(--cek-padding-inline);\n}\n\n:host([variant]) #button:focus {\n  \toutline: var(--cek-focus-ring);\n  \toutline-offset: var(--cek-focus-ring-offset);\n}\n\n:host([loading]) #button,\n:host([disabled]) #button {\n  \tcursor: not-allowed;\n  \tpointer-events: none;\n}\n\n:host([loading]) #button {\n  \tbackground-color: lightgray;\n  \tcolor: rgba(0, 0, 0, 0.5);\n}\n\n:host([disabled][variant]) #button {\n  \tbackground-color: #ccc;\n  \tcolor: rgba(0, 0, 0, 0.5);\n}\n\n:host([size="small"]) #button {\n  \tmin-height: var(--cek-height-small);\n  \tmin-width: var(--cek-height-small);\n  \tfont-size: var(--cek-font-size-0);\n}\n\n:host(:not([size])) #button, \n:host([size="medium"]) #button {\n  \tmin-height: var(--cek-height-medium);\n  \tmin-width: var(--cek-height-medium);\n  \tfont-size: var(--cek-font-size-1);\n}\n\n:host([size="large"]) #button {\n  \tmin-height: var(--cek-height-large);\n  \tmin-width: var(--cek-height-large);\n  \tfont-size: var(--cek-font-size-2);\n}\n\n:host([variant="primary"]) #button {\n  \tbackground-color: var(--cek-color-primary-500);\n  \tcolor: white;\n\n  \t&:hover {\n\t\tfilter: brightness(85%);\n  \t}\n}\n\n:host([variant="secondary"]) #button {\n \tbackground-color: var(--cek-surface-color-1);\n \t color: var(--cek-text-color-1);\n\n \t &:hover {\n\t\tfilter: brightness(85%);\n  \t}\n}\n\n:host([variant="outline"]) #button {\n\tbackground-color: transparent;\n\tborder: 1px solid var(--cek-border-color-2);\n\tcolor: var(--cek-text-color-1);\n\n  \t&:hover {\n\t\ttext-decoration: underline;\n\t}\n}\n\n:host([variant="ghost"]) #button {\n\tbackground: transparent;\n\tcolor: var(--cek-text-color-1);\n}\n\n:host([variant="ghost"]) #button:hover {\n\tbackground-color: var(--cek-surface-color-1);\n}\n\n:host([variant="link"]) #button {\n\tbackground-color: transparent;\n\tcolor: var(--cek-color-primary-500);\n\tpadding: 0;\n\tmargin: 0;\n\tmin-height: 0;\n\tmin-width: 0;\n\n  \t&:hover {\n  \t\ttext-decoration: underline;\n  \t}\n}\n\n:host([variant="destructive"]) #button {\n \tbackground-color: var(--cek-color-red-600);\n  \tcolor: white;\n\n\t &:hover {\n\t\tfilter: brightness(85%);\n  \t}\n}\n\n:host([variant="destructive"]) #button:focus {\n  \toutline: 2px solid var(--cek-color-red-600);\n}\n\n:host([variant="neutral"]) #button {\n  \tbackground-color: var(--cek-color-neutral);\n  \tcolor: var(--cek-text-color-neutral);\n\n\t&:hover {\n\t\tfilter: brightness(85%);\n  \t}\n}\n\n:host([variant="icon"]) #button {\n  \tpadding: var(--cek-space-2);\n  \tmargin: 0;\n}\n\n:host([pill]) #button {\n  border-radius: 50px;\n}\n\n:host([circle]) #button {\n  border-radius: 50%;\n  padding: 0;\n  width: var(--cek-height-medium);\n  height: var(--cek-height-medium);\n}\n\n[name="end"]::slotted(*) {\n  \tmargin-inline-start: 0.5ch;\n}\n\n[name="start"]::slotted(*) {\n  \tmargin-inline-end: 0.5ch;\n}\n\n#loading-icon {\n  \tposition: absolute;\n  \tdisplay: none;\n  \ttop: 50%;\n  \tleft: 50%;\n  \ttransform: translate(-50%, -50%);\n}\n\n:host([loading]) #loading-icon {\n  display: block;\n}\n\n:host([icon-only]) #button {\n  padding: var(--cek-space-2);\n  margin: 0;\n}\n\n#arrow-icon {\n  \tdisplay: none;\n  \theight: 1em;\n  \twidth: 1em;\n  \tmargin-inline-start: 0.5ch;\n}\n\n:host([arrow]) #arrow-icon {\n  \tdisplay: block;\n}\n\n::slotted(cek-icon) {\n\t--height: 1.4em;\n\t--width: 1.4em;\n}\n';class o extends HTMLElement{static formAssociated=!0;static get observedAttributes(){return["loading",...t]}#t;constructor(){super(),this.#t=this.attachInternals(),this.shadowRoot||(this.attachShadow({mode:"open",delegatesFocus:!0}),this.shadowRoot.innerHTML=`<style>${e}</style>${n(this.#n)}`)}get type(){return this.getAttribute("type")||"button"}set type(t){this.setAttribute("type",t)}get loading(){return this.hasAttribute("loading")}set loading(t){t?this.setAttribute("loading",""):this.removeAttribute("loading")}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get#n(){const t={};for(const{name:n,value:e}of this.attributes)t[n]=e;return t}get#e(){return this.shadowRoot.getElementById("button")}connectedCallback(){this.#o(),this.hasAttribute("href")||this.#e.addEventListener("click",this.#i),this.#r()}disconnectedCallback(){this.#e?.removeEventListener("click",this.#i)}attributeChangedCallback(n,e,o){(t.includes(n)||"loading"===n)&&(this.#o(),this.#r())}formDisabledCallback(t){this.disabled=t}formResetCallback(){this.loading=!1}focus(){this.#e.focus()}#r(){for(const n of t){const t="button-aria-label"===n?"aria-label":n;this.hasAttribute(n)?this.#e.setAttribute(t,this.getAttribute(n)):"type"!==n||this.hasAttribute("href")?"autocomplete"===n?this.#e.setAttribute("autocomplete","off"):this.#e.removeAttribute(t):this.#e.type="text"}}#o(){const t=this.#e,n=this.hasAttribute("href");if(n&&"button"===t.tagName.toLowerCase()){const n=document.createElement("a");for(n.id="button",n.part.add("button");t.firstChild;)n.appendChild(t.firstChild);t.replaceWith(n)}else if(!n&&"a"===t.tagName.toLowerCase()){const t=document.createElement("button");for(t.id="button",t.part.add("button");t.firstChild;)t.appendChild(t.firstChild);t.replaceWith(t),t.addEventListener("click",this.#i)}}#i=t=>{if(this.disabled||this.loading)return void t.preventDefault();"submit"===this.type?this.#t.form?.requestSubmit():"reset"===this.type&&this.#t.form?.reset(),this.dispatchEvent(new CustomEvent("click",{bubbles:!0,composed:!0}));const n=this.getAttribute("commandfor"),e=this.getAttribute("command");if(n&&e){const t="parent"===n?this.parentElement:this.ownerDocument.getElementById(n);if(t){const n=new CustomEvent("command",{bubbles:!1,composed:!0,cancelable:!0,detail:{source:this,command:e}});n.command=e,n.invoker=this,t.dispatchEvent(n)}}const o=new t.constructor(t.type,t);this.dispatchEvent(o)}}customElements.define("cek-button",o);export{o as Button,e as buttonStyles,n as buttonTemplate};
