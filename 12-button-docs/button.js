const t=t=>{const n=t?"a":"button";return`\n\t\t<${n} id="button" part="button">\n\t\t<slot name="start"></slot>\n\t\t<div id="label" part="label"><slot></slot></div>\n\t\t<slot name="end"></slot>\n\t\t<svg id="loading-icon" part="loading-icon" width="24" height="24" viewBox="0 0 24 24" \n\t\t\txmlns="http://www.w3.org/2000/svg">\n\t\t\t<path d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z" opacity=".25"/>\n\t\t\t<path d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7\n\t\t\ta8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z">\n\t\t\t<animateTransform attributeName="transform" type="rotate" dur="0.75s" \n\t\t\t\tvalues="0 12 12;360 12 12" repeatCount="indefinite"/>\n\t\t\t</path>\n\t\t</svg>\n\t\t<svg id="arrow-icon" part="arrow-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" \n\t\t\tfill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">  \n\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" />\n\t\t</svg>\n\t\t</${n}>\n\t`},n='\n:host {\n  display: inline-block;\n  font-family: var(--cek-font-family);\n  line-height: var(--cek-line-height);\n  box-sizing: border-box;\n}\n\n#button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background: transparent;\n  border: none;\n  padding: 0;\n  margin: 0;\n  font: inherit;\n  color: inherit;\n  cursor: pointer;\n  box-sizing: border-box;\n  text-decoration: none;\n}\n\n:host([variant]) #button {\n  border-radius: var(--cek-border-radius);\n  padding-inline: var(--cek-padding-inline);\n}\n\n:host([variant]) #button:hover {\n  filter: brightness(85%);\n}\n\n:host([variant]) #button:focus {\n  outline: var(--cek-focus-ring);\n  outline-offset: var(--cek-focus-ring-offset);\n}\n\n:host([loading]) #button,\n:host([disabled]) #button {\n  cursor: not-allowed;\n  pointer-events: none;\n}\n\n:host([loading]) #button {\n  background-color: lightgray;\n  color: rgba(0, 0, 0, 0.5);\n}\n\n:host([disabled][variant]) #button {\n  background-color: #ccc;\n  color: rgba(0, 0, 0, 0.5);\n}\n\n:host([size="small"]) #button {\n  min-height: var(--cek-height-small);\n  font-size: var(--cek-font-size-0);\n}\n\n:host(:not([size])) #button, \n:host([size="medium"]) #button {\n  min-height: var(--cek-height-medium);\n  font-size: var(--cek-font-size-1);\n}\n\n:host([size="large"]) #button {\n  min-height: var(--cek-height-large);\n  font-size: var(--cek-font-size-2);\n}\n\n:host([variant="primary"]) #button {\n  background-color: var(--cek-color-primary-500);\n  color: white;\n}\n\n:host([variant="ascent"]) #button {\n  background-color: var(--cek-surface-color-3);\n  color: var(--cek-text-color-1);\n}\n\n:host([variant="outline"]) #button {\n  background-color: transparent;\n  border: 1px solid var(--cek-border-color-2);\n  color: var(--cek-text-color-1);\n}\n\n:host([variant="text"]) #button {\n  background: transparent;\n  color: var(--cek-text-color-1);\n}\n\n:host([variant="text"]) #button:hover {\n  background-color: var(--cek-surface-color-2);\n}\n\n:host([variant="link"]) #button {\n  background-color: transparent;\n  color: var(--cek-color-primary-500);\n  text-decoration: underline;\n}\n\n[name="end"]::slotted(*) {\n  margin-inline-start: 0.5ch;\n}\n\n[name="start"]::slotted(*) {\n  margin-inline-end: 0.5ch;\n}\n\n#loading-icon {\n  position: absolute;\n  display: none;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n:host([loading]) #loading-icon {\n  display: block;\n}\n\n:host([icon-only]) #button {\n  padding-inline: 0.8ch;\n}\n\n#arrow-icon {\n  display: none;\n  height: 1em;\n  width: 1em;\n  margin-inline-start: 0.5ch;\n}\n\n:host([arrow]) #arrow-icon {\n  display: block;\n}\n',e=["required","type","disabled","button-aria-label","value","href","target"];class o extends HTMLElement{static formAssociated=!0;static get observedAttributes(){return["loading",...e]}#t;constructor(){super(),this.#t=this.attachInternals(),this.shadowRoot||(this.attachShadow({mode:"open",delegatesFocus:!0}),this.shadowRoot.innerHTML=`<style>${n}</style>${t(this.hasAttribute("href"))}`)}get type(){return this.getAttribute("type")||"button"}set type(t){this.setAttribute("type",t)}get loading(){return this.hasAttribute("loading")}set loading(t){t?this.setAttribute("loading",""):this.removeAttribute("loading")}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get#n(){return this.shadowRoot.getElementById("button")}connectedCallback(){this.#e(),this.hasAttribute("href")||this.#n.addEventListener("click",this.#o),this.#i()}disconnectedCallback(){this.#n?.removeEventListener("click",this.#o)}attributeChangedCallback(t,n,o){(e.includes(t)||"loading"===t)&&(this.#e(),this.#i())}formDisabledCallback(t){this.disabled=t}formResetCallback(){this.loading=!1}focus(){this.#n.focus()}#i(){const t=this.#n,n=this.hasAttribute("href");if(this.hasAttribute("button-aria-label")?t.setAttribute("aria-label",this.getAttribute("button-aria-label")):t.removeAttribute("aria-label"),n){t.removeAttribute("type"),t.removeAttribute("disabled");const n=this.getAttribute("href");t.setAttribute("href",n);const e=this.getAttribute("target")||"_self";t.setAttribute("target",e)}else t.removeAttribute("href"),t.removeAttribute("target"),t.setAttribute("type",this.getAttribute("type")||"button"),this.disabled?t.setAttribute("disabled",""):t.removeAttribute("disabled")}#e(){const t=this.#n,n=this.hasAttribute("href");if(n&&"button"===t.tagName.toLowerCase()){const n=document.createElement("a");for(n.id="button",n.part.add("button");t.firstChild;)n.appendChild(t.firstChild);t.replaceWith(n)}else if(!n&&"a"===t.tagName.toLowerCase()){const t=document.createElement("button");for(t.id="button",t.part.add("button");t.firstChild;)t.appendChild(t.firstChild);t.replaceWith(t),t.addEventListener("click",this.#o)}}#o=t=>{this.disabled||this.loading?t.preventDefault():("submit"===this.type?this.#t.form?.requestSubmit():"reset"===this.type&&this.#t.form?.reset(),this.dispatchEvent(new CustomEvent("click",{bubbles:!0,composed:!0})))}}customElements.define("cek-button",o);export{o as Button,n as buttonStyles,t as buttonTemplate};
