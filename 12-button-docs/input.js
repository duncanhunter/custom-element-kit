const t=["required","type","disabled","inputmode","placeholder","min","max","minlength","maxlength","pattern","step","autocomplete","autofocus","title","spellcheck","input-aria-label","value"],e=(e={})=>{const n=t.filter((t=>void 0!==e[t])).map((t=>`${"input-aria-label"===t?"aria-label":t}="${e[t]}"`)).join(" ");return`\n\t\t<label for="input" id="label" part="label">\n\t\t\t<slot name="label">${e.label??""}</slot>\n\t\t</label>\n\t\t<div id="help" part="help">\n\t\t\t<slot name="help">${e.help??""}</slot>\n\t\t</div>\n\t\t<div id="error" part="error">\n\t\t\t<slot name="error">${e.error??""}</slot>\n\t\t</div>\n\t\t<div id="container" part="container">\n\t\t\t<slot name="start"></slot>\n\t\t\t<input part="input" id="input" ${n} aria-describedby="help error">\n\t\t\t<button part="password-button" id="password-button" aria-label="show password toggle" style="${void 0!==e["password-button"]?"display:flex;":"display:none;"}">\n\t\t\t\t<svg part="hide-password-icon" id="hide-password-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">\n\t\t\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88" />\n\t\t\t\t</svg>\n\t\t\t\t<svg part="show-password-icon" id="show-password-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">\n\t\t\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />\n\t\t\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t<button part="clear-button" id="clear-button" aria-label="clear" style="${void 0!==e["clear-button"]&&(e.value??"").length>0?"display:flex;":"display:none;"}">\n\t\t\t\t<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">\n\t\t\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t<slot name="end"></slot>\n\t\t</div>\n\t\t`},n='\n:host {\n\tdisplay: block;\n\tfont-family: var(--cek-font-family);\n}\n\n#container {\n\tdisplay: flex;\n\talign-items: stretch;\n\tborder: var(--cek-form-control-border);\n\tborder-radius: var(--cek-border-radius);\n\tbox-sizing: border-box;\n}\n\n#container:has(#input:focus) {\n\toutline: var(--cek-focus-ring);\n\toutline-offset: var(--cek-focus-ring-offset);\n}\n\n#input {\n\tborder: none;\n\tpadding: 0;\n\toutline: none;\n\tflex: 1;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tcolor: inherit;\n\tmargin-inline: var(--cek-space-2);\n\tbackground-color: var(--cek-surface-color-0);\n}\n\n:host([size="small"]) #container {\n\tmin-height: var(--cek-height-small);\n}\n\n:host([label][size="small"]) #label,\n:host([help][size="small"]) #help,\n:host([error][size="small"]) #error,\n:host([size="small"]) #input::placeholder {\n\tfont-size: var(--cek-font-size-0);\n}\n\n:host(:not([size])) #container,\n:host([size="medium"]) #container {\n\tmin-height: var(--cek-height-medium);\n}\n\n:host([label][size="medium"]) #label,\n:host([help][size="medium"]) #help,\n:host([error][size="medium"]) #error,\n:host([size="medium"]) #input::placeholder {\n\tfont-size: var(--cek-font-size-1);\n}\n\n:host([size="large"]) #container {\n\tmin-height: var(--cek-height-large);\n}\n\n:host([label][size="large"]) #label,\n:host([help][size="large"]) #help,\n:host([error][size="large"]) #error,\n:host([size="large"]) #input::placeholder {\n\tfont-size: var(--cek-font-size-2);\n}\n\n#help {\n\tcolor: var(--cek-text-color-3);\n}\n\n#error {\n\tcolor: var(--cek-text-color-error);\n}\n  \n:host([label]) #label,\n:host([help]) #help,\n:host([error]) #error {\n\tdisplay: block;\n\tmargin-block-end: var(--cek-space-2);\n}\n\n:host([error]) #container {\n\tborder-color: var(--cek-border-color-error);\n}\n  \n:host([error]) #container:has(#input:focus) {\n\toutline-color: var(--cek-border-color-error);\n}\n\n[name="start"]::slotted(cek-icon),\n[name="end"]::slotted(cek-icon) {\n\tmargin: var(--cek-space-2);\n\talign-self: center;\n}\n[name="start"]::slotted(cek-button),\n[name="end"]::slotted(cek-button) {\n\tmargin: var(--cek-space-3);\n\talign-self: center;\n}\n\n[name="start"]::slotted(kbd), [name="end"]::slotted(kbd) {\n\tpadding: var(--cek-space-1) var(--cek-space-2);\n\tmargin: var(--cek-space-2);\n\tborder: var(--cek-border);\n\tborder-radius: var(--cek-border-radius);\n\tcolor: var(--cek-text-color-2);\n\talign-self: center;\n}\n\n#password-button #hide-password-icon {\n\tdisplay: none;\n}\n\n#password-button, #clear-button {\n\tdisplay: none;\n\tborder: none;\n\tbackground: none;\n\tcursor: pointer;\n\tpadding: 0 var(--cek-space-1);\n\tmargin-inline: var(--cek-space-3);\n\talign-self: center;\n}\n\n#password-button:focus, #clear-button:focus {\n\tborder-radius: var(--cek-border-radius);\n\toutline: var(--cek-focus-ring);\n\toutline-offset: var(--cek-focus-ring-offset);\n}\n\n#password-button #hide-password-icon {\n\tdisplay: none;\n}\n\n#password-button svg, #clear-button svg {\n\tfont-size: var(--cek-font-size-1);\n\tcolor: var(--cek-text-color-1);\n\theight: 1em;\n\twidth: 1em;\n}';class s extends HTMLElement{static get observedAttributes(){return["label","help","error",...t]}static formAssociated=!0;#t=null;constructor(){super(),this.#t=this.attachInternals(),this.shadowRoot||(this.attachShadow({mode:"open",delegatesFocus:!0}),this.shadowRoot.innerHTML=`<style>${n}</style>${e(this.#e)}`)}get value(){return this.#n.value}set value(t){this.#n.value!==t&&(this.#n.value=t),this.#t.setFormValue(t)}get name(){return this.getAttribute("name")}get validity(){return this.#n.validity}get validationMessage(){return this.#t.validationMessage}get#n(){return this.shadowRoot.getElementById("input")}get#s(){return this.shadowRoot.getElementById("password-button")}get#i(){return this.shadowRoot.getElementById("clear-button")}get#e(){const t={};for(const{name:e,value:n}of this.attributes)t[e]=n;return t}connectedCallback(){this.#o()}disconnectedCallback(){this.#r()}formAssociatedCallback(t){t&&(t.addEventListener("submit",this.#a),this.#n.addEventListener("keyup",this.#l))}formDisabledCallback(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}formResetCallback(){this.value=this.getAttribute("value")||"",this.removeAttribute("error"),this.#t.form.removeAttribute("submitted"),this.#t.setFormValue(""),this.#t.setValidity({}),this.#u(),this.#h()}attributeChangedCallback(e,n,s){t.includes(e)&&this.#d(),["label","help","error"].includes(e)&&(this.shadowRoot.getElementById(e).textContent=s)}focus(){this.#n.focus()}#o(){this.#n.addEventListener("input",this.#c),this.#n.addEventListener("change",this.#p),this.#s.addEventListener("click",this.#b),this.#i.addEventListener("click",this.#m)}#r(){this.#n.removeEventListener("input",this.#c),this.#n.removeEventListener("change",this.#p),this.#t.form?.removeEventListener("submit",this.#a),this.#n.removeEventListener("keyup",this.#l),this.#s.removeEventListener("click",this.#b),this.#i.removeEventListener("click",this.#m)}#d(){for(const e of t){const t="input-aria-label"===e?"aria-label":e;this.hasAttribute(e)?this.#n.setAttribute(t,this.getAttribute(e)):"type"===e?this.#n.type="text":"autocomplete"===e?this.#n.setAttribute("autocomplete","off"):this.#n.removeAttribute(t)}}#c=t=>{this.value=this.#n.value,this.#v(),this.#u(),this.dispatchEvent(new t.constructor(t.type,t))};#p=t=>{this.hasAttribute("validate-on-change")&&(this.#v(!0),this.dispatchEvent(new t.constructor(t.type,t)))};#a=t=>{this.#t.form.setAttribute("submitted",""),this.#v()||(t.preventDefault(),this.#t.form.querySelector(":invalid")===this&&this.#n.focus())};#l=t=>{"Enter"===t.key&&(t.preventDefault(),this.#t.form.requestSubmit())};#m=t=>{t.preventDefault(),t.stopImmediatePropagation(),this.#n.value="",this.#u(),setTimeout((()=>this.#n.focus()),200)};#b=()=>{"password"===this.#n.type?(this.#n.type="text",this.shadowRoot.getElementById("hide-password-icon").style.display="block",this.shadowRoot.getElementById("show-password-icon").style.display="none"):this.#h()};#h(){this.hasAttribute("password-button")&&(this.#n.type="password",this.shadowRoot.getElementById("hide-password-icon").style.display="none",this.shadowRoot.getElementById("show-password-icon").style.display="block")}#u(){this.value.length>0&&this.hasAttribute("clear-button")?this.#i.style.display="flex":this.#i.style.display="none"}#v(t=!1){this.#t.setValidity({}),this.removeAttribute("error");for(const e of["valueMissing","tooShort","tooLong","typeMismatch","rangeUnderflow","rangeOverflow","patternMismatch"])if(this.#n.validity[e]){const n=this.getAttribute(`${e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}-message`)||e.replace(/([A-Z])/g," $1").replace(/^\w/,(t=>t.toUpperCase()));return this.#t.setValidity({[e]:!0},n,this.#n),(this.#t.form?.hasAttribute("submitted")||t||this.hasAttribute("error"))&&this.setAttribute("error",n),!1}return!0}}customElements.define("cek-input",s);export{n as inputStyles,e as inputTemplate};
