import{codeToHtml as t}from"https://esm.sh/shiki@1.0.0";const e='\n<div part="container"><slot></slot></div>\n',o="\npre {\n\tpadding: var(--ui-space-6);\n}\ncode {\n    white-space: normal;\n}\n";class n extends HTMLElement{static get observedAttributes(){return["lang","theme"]}constructor(){super(),this.shadowRoot||(this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`<style>${o}</style>${e}`)}connectedCallback(){this.updateCodeBlock()}attributeChangedCallback(t,e,o){e!==o&&this.updateCodeBlock()}async updateCodeBlock(){const e=this.shadowRoot.querySelector("slot"),o=this.shadowRoot.querySelector("[part=container]"),n=this.getSlotContentAsHTML(e),s=this.getAttribute("lang")||"html",a=this.getAttribute("theme")||"github-dark";o.innerHTML=await t(n,{lang:s,theme:a})}getSlotContentAsHTML(t){const e=t.assignedNodes({flatten:!0});let o="";for(const t of e)t.nodeType===Node.ELEMENT_NODE?o+=t.outerHTML:t.nodeType===Node.TEXT_NODE&&(o+=t.textContent);return o}}customElements.define("ui-code-block",n);export{n as CodeBlock,o as codeBlockStyles,e as codeBlockTemplate};
