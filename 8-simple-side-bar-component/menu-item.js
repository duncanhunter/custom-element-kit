const t='\n<button part="button" tabindex="-1" role="menuitem">\n    <span part="checked">\n\t\t<svg aria-hidden="true" part="check-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">\n\t\t\t<path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" />\n  \t\t</svg>\n\t\t<svg aria-hidden="true" part="circle-icon" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">\n        \t<circle cx="50" cy="50" r="50" fill="currentColor" />\n    \t</svg>\n  \t</span>\n\t<slot name="start"></slot>\n\t<slot></slot>\n\t<slot name="end"></slot>\n</button>\n<slot name="submenu"></slot>\n',e='\n:host {\n\tdisplay: flex;\n}\n\n:host([open]) :where(a, button) {\n\tbackground-color: var(--cek-surface-color-0);\n}\n\nsvg[part=arrow-icon] {\n\twidth: 1em;\n\theight: 1em;\n\tmargin-inline: var(--cek-space-2);\n}\n\nbutton, a {\n\tposition: relative;\n\tappearance: none;\n\tborder: 0;\n\tborder-radius: var(--cek-border-radius);\n\tbackground-color: var(--cek-surface-color-0);\t\n\tpadding: var(--cek-space-2) var(--cek-space-3);;\n\tmargin: var(--cek-space-2);\n\tfont: inherit;\n\tcolor: var(--cek-text-color-2);\n\ttext-align: inherit;\n\tflex: auto;\n\tfont-family: var(--cek-font-family);\n\tline-height: var(--cek-line-height);\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcursor: pointer;\n\tbox-sizing: border-box;\n\ttext-decoration: none;\n\tmin-height: var(--cek-height-small);\n\n\t&:focus {\n\t    background-color: var(--cek-surface-color-1);\n\t\toutline: none;\n\t}\n\t\n\t&[aria-expanded=true]:hover {\n\t\tbackground-color: var(--cek-surface-color-1);\n\t}\n}\n\n:host [part=checked] svg {\n\tdisplay: none;\n}\n\n:host(:is([type=checkbox], [type=radio])) [part=checked] {\n\twidth: var(--cek-space-7);\n}\n\n:host([type="checkbox"][checked=""]) [part=check-icon] {\n\tdisplay: flex;\n\twidth: 0.9em;\n\theight: 0.9em;\n}\n\n:host([type="radio"][checked=""]) [part=circle-icon] {\n\tdisplay: flex;\n\twidth: 0.5em;\n\theight: 0.5em;\n}\n\nslot[name=start], slot[name=end] {\n    flex: 0 0 auto;\n}\n\nslot {\n    flex: 1 1 auto;\n    display: inline-block;\n\tmargin-inline: var(--cek-space-2);\n}\n\nslot[name=submenu] {\n    display: contents;\n}\n\n::slotted(cek-icon) {\n\tmargin-inline: var(--cek-space-1);\n}\n\n::slotted(cek-icon) {\n\tfont-size: 1.3em;\n}\n';class n extends HTMLElement{static get observedAttributes(){return["href","target","type","checked"]}#t;#e;constructor(){super(),this.shadowRoot||(this.attachShadow({mode:"open",delegatesFocus:!0}),this.shadowRoot.innerHTML=`<style>${e}</style>${t}`),this.#n()}get href(){return this.getAttribute("href")}get target(){return this.getAttribute("target")??"_self"}get type(){return this.getAttribute("type")}get value(){return this.getAttribute("value")}get#r(){return this.href?this.#t:this.#e}attributeChangedCallback(t,e,n){"checked"===t&&(""===n?this.#r.setAttribute("aria-checked","true"):this.#r.removeAttribute("aria-checked"))}connectedCallback(){this.#o()}#o(){const t=this.querySelector("[slot=submenu]");if(!t)return;this.placement=t.getAttribute("placement")??"right";const e=this.placement.startsWith("right")?"beforeend":"afterbegin",n=this.placement.startsWith("right")?"-90deg":"90deg";this.#r.insertAdjacentHTML(e,'<svg aria-hidden="true" part="arrow-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">  <path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5" /></svg>');this.#r.querySelector("svg[part=arrow-icon]").style.transform=`rotate(${n})`}#n(){this.#e=this.shadowRoot.querySelector("button");const t="radio"===this.type?"menuitemradio":"checkbox"===this.type?"menuitemcheckbox":"menuitem";if(this.href){const e=document.createElement("a");for(e.setAttribute("role",t),e.href=this.href,e.target=this.target,e.setAttribute("tabindex","-1"),e.setAttribute("part","anchor");this.#e.firstChild;)e.appendChild(this.#e.firstChild);this.#e.replaceWith(e),this.#e=null,this.#t=e}else this.#e.setAttribute("role",t)}focus(){this.#r.focus()}}customElements.define("cek-menu-item",n);export{n as MenuItem,e as menuItemStyles,t as menuItemTemplate};
