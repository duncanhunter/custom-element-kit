import{F as e}from"./form-element-ffd19fcb.js";const r='\n<input type="checkbox" id="control" part="control" aria-describedby="help error"/>\n<div>\n\t<label for="control" id="label" part="label"><slot name="label"></slot></label>\n\t<div id="help" part="help"><slot name="help"></slot></div>\n\t<div id="error" part="error"><slot name="error"></slot></div>\n</div>\n',t="\n:host {\n\tdisplay: flex;\n\talign-items: flex-start;\n\tfont-size: var(--cek-font-size-1);\n\tfont-family: var(--cek-font-family);\n\tcolor: var(--cek-text-color-0);\n}\n\n#control {\n\tborder: none;\n\toutline: none;\n\taccent-color: var(--cek-color-primary-300);\n\twidth: var(--cek-space-6);\n\theight: var(--cek-space-6);\n}\n  \n#error {\n\tcolor: var(--cek-text-color-error);\n}\n  \n:host([help]) #help,\n:host([error]) #error {\n\tmargin-block-start: var(--cek-space-2);\n}\n\n:host([error]) #control {\n\tborder-color: var(--cek-border-color-error);\n}\n  \n:host([error]) #control:focus {\n\t  outline-color: var(--cek-border-color-error);\n}\n",o=["value","required","name","autofocus","title","disabled","readonly","control-aria-label"];class n extends e{static get observedAttributes(){return[...e.observedAttributes,...o]}constructor(){super(t,r)}get controlElement(){return this.shadowRoot.getElementById("control")}get controlAttributes(){return o}get checked(){return this.controlElement.checked}set checked(e){this.controlElement.checked=e}connectedCallback(){super.connectedCallback(),this.closest("cek-checkbox-group")&&(this.formDisabled=!0)}}customElements.define("cek-checkbox",n);export{n as Checkbox,t as checkboxStyles,r as checkboxTemplate};
